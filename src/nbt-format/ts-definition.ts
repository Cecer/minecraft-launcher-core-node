import { NBT } from '../nbt';

interface Item {
    "Slot": number,
    "id": string,
    "Count": number,
    "Damage": number,
    "tag": {
        // general tags
        Unbreakable: number,
        CanDestroy: string[],

        // block tags
        CanPlaceOn: string[],
        BlockEntityTag: {
            // entity format
        },

        // enchantments
        ench: { id: number, lvl: number }[],
        StoredEnchantments: { id: number, lvl: number }[],
        RepairCost: number,

        // attribute modifiers
        AttributeModifiers: { AttributeName: string, Name: string, Slot: string, Operation: number, Amount: number, UUIDMost: Long, UUIDLeast: Long }[],

        // potion effects
        CustomPotionEffects: { Id: number, Amplifier: number, Duration: number, Ambient: number, ShowParticles: number }[],
        Potion: string,
        CustomPotionColor: number,

        // display properties
        display: { color: number, Name: string, LocName: string, Lore: string[] }[],
        HideFlags: number,

        // written books
        resolved: number,
        /**
         * The copy tier of the book. 0 = original, number = copy of original, number = copy of copy, number = tattered. If the value is greater than number, the book cannot be copied. Does not exist for original books. If this tag is missing, it is assumed the book is an original. 'Tattered' is unused in normal gameplay, and functions identically to the 'copy of copy' tier.
         */
        generation: number,
        author: string,
        title: string,
        /**
         *  A single page in the book. If generated by writing in a book and quill in-game, each page is a string in double quotes and uses the escape sequences \" for a double quote, \n for a line break and \\ for a backslash. If created by commands or external tools, a page can be a serialized JSON object or an array of strings and/or objects (see Commands#Raw JSON text) or an unescaped string.
         */
        pages: string[],

        // player heads
    },
}

interface Player {
    "AbsorptionAmount": number,
    "Air": number,
    "Attributes": {
        "Base": number,
        "Name": string
    }[],
    "DataVersion": number,
    "DeathTime": number,
    "Dimension": number,
    "EnderItems": Item[],
    "FallDistance": number,
    "FallFlying": number,
    "Fire": number,
    "Health": number,
    "HurtByTimestamp": number,
    "HurtTime": number,
    "Inventory": Item[],
    "Invulnerable": number,
    "Motion": number[],
    "OnGround": number,
    "PortalCooldown": number,
    "Pos": number[],
    "Rotation": number[],
    "Score": number,
    "SelectedItemSlot": number,
    "SleepTimer": number,
    "Sleeping": number,
    "UUIDLeast": Long,
    "UUIDMost": Long,
    "XpLevel": number,
    "XpP": number,
    "XpSeed": number,
    "XpTotal": number,
    "abilities": {
        "invulnerable": number,
        "mayfly": number,
        "instabuild": number,
        "walkSpeed": number,
        "mayBuild": number,
        "flying": number,
        "flySpeed": number
    },
    "foodExhaustionLevel": number,
    "foodLevel": number,
    "foodSaturationLevel": number,
    "foodTickTimer": number,
    "playerGameType": number
}

interface Level {
    "Data": {
        "BorderCenterX": number,
        "BorderCenterZ": number,
        "BorderDamagePerBlock": number,
        "BorderSafeZone": number,
        "BorderSize": number,
        "BorderSizeLerpTarget": number,
        "BorderSizeLerpTime": Long,
        "BorderWarningBlocks": number,
        "BorderWarningTime": number,
        "CustomBossEvents": {
            [key: string]: {
                Players: any[],
                Color: string,
                CreateWorldFog: number,
                DarkenScreen: number,
                Max: number,
                Value: number,
                Name: string,
                OverLay: string,
                PlayBossMusic: number,
                Visible: number,
            }
        },
        "DataVersion": number,
        "DayTime": Long,
        "DataPacks": {
            "Disabled": string[],
            "Enabled": string[],
        },
        "Difficulty": number,
        "DifficultyLocked": number,
        "DimensionData": {
            "number": {
                "DragonFight": {
                    "ExitPortalLocation": { X: number, Y: number, Z: number },
                    "Gateways": number[],
                    "DragonKilled": number,
                    "PreviouslyKilled": number
                }
            }
        },
        "GameRules": {
            "doTileDrops": string,
            "doFireTick": string,
            "reducedDebugInfo": string,
            "naturalRegeneration": string,
            "disableElytraMovementCheck": string,
            "doMobLoot": string,
            "keepInventory": string,
            "doEntityDrops": string,
            "mobGriefing": string,
            "randomTickSpeed": string,
            "commandBlockOutput": string,
            "spawnRadius": string,
            "doMobSpawning": string,
            "logAdminCommands": string,
            "spectatorsGenerateChunks": string,
            "sendCommandFeedback": string,
            "doDaylightCycle": string,
            "showDeathMessages": string
        },
        "GameType": number,
        "LastPlayed": Long,
        "LevelName": string,
        "MapFeatures": number,
        "Player": Player,
        "RandomSeed": Long,
        "SizeOnDisk": Long,
        "SpawnX": number,
        "SpawnY": number,
        "SpawnZ": number,
        "Time": Long,
        "Version": {
            "Snapshot": number,
            "Id": number,
            "Name": string
        },
        "allowCommands": number,
        "clearWeatherTime": number,
        "generatorName": string,
        "generatorOptions": string,
        "generatorVersion": number,
        "hardcore": number,
        "initialized": number,
        "rainTime": number,
        "raining": number,
        "thunderTime": number,
        "thundering": number,
        "version": number
    }
}
